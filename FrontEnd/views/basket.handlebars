<div>
  <a href="/products">See the products</a>
  <center>
    <h3>Your Basket</h3>
  </center>
</div>
<div>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Product</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
      </tr>
    </thead>
    <tbody>
      
    </tbody>
  </table>
</div>
<div>
  <center>
    <h3>Total:</h3>
  </center>
</div>
<div>
  <center><a href="/basket/checkout" class="btn btn-primary">Checkout</a></center>

</div>

<script>
  window.onload = async function () {
    const productIds = getLocalStorageItems();
    const basketProducts = await getProducts(productIds);
    const html = getHTML(basketProducts);
    insertHTML(html);
    //console.log(basketProducts);
  }; 
  
  function getLocalStorageItems() {
    productIds = JSON.parse(localStorage.getItem("basket")); 
    return productIds.map(item => parseInt(item));
  } 
  
  async function getProducts(productIds) {
    const data = {
      productIds: productIds
    } 
    const response = await
      fetch(`http://localhost:3010/api/basket`, {
        method: "POST", 
        body: JSON.stringify(data), 
        headers: { 'content-type': 'application/json', }
      })
    const products = await response.json();
    return products
  }

  function getHTML(products){
    let html = "";
    for (let product of products) { 
      html += ` <tr>
        <td>${product.title}</td>
        <td>${product.price}</td>
        <td>Quantity</td>
        <td>Total</td>
      </tr> `
     }
     //console.log(html)
     return html
  }

  function insertHTML(html){
    const tBody = document.querySelector("tbody");
    tBody.innerHTML = html;
  }
</script>

/*

1. Find a way to push new products added to the basket to the basket array in localStorage

let currentProducts = JSON.parse(localStorage.getItem("basket"))
currentProducts.push(newProduct) (index.js)

[1, 5, 6, 8]

2. Delete item from localStorage and refresh/reload /basket page

3. Basket total. Consider adding a getTotal function that takes products and will calulate total of all products, then add to the total HTML element

4. Sort CSS formatting for basket. Look into table styles.

5. Format and comment functions

*/